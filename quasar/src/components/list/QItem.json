{
  "props": {
    "active": {
      "type": "Boolean",
      "desc": "Put item into 'active' state"
    },

    "dark": {
      "extends": "dark"
    },

    "clickable": {
      "type": "Boolean",
      "desc": "Is QItem clickable? If it's the case, then it will add hover effects and emit 'click' events"
    },

    "dense": {
      "extends": "dense"
    },

    "inset": {
      "type": "Boolean",
      "desc": "Apply an inset; Useful when avatar/left side is missing but you want to align content with other items that do have a left side"
    },

    "tabindex": {
      "extends": "tabindex"
    },

    "tag": {
      "type": "String",
      "desc": "HTML tag to render; Suggestion: use 'label' when encapsulating a QCheckbox/QRadio/QToggle so that when user clicks/taps on the whole item it will trigger a model change for the mentioned components",
      "default": "div",
      "examples": [ "a", "label" ]
    },

    "manual-focus": {
      "type": "Boolean",
      "desc": "Put item into a manual focus state; Enables 'focused' prop which will determine if item is focused or not, rather than relying on native hover/focus states"
    },

    "focused": {
      "type": "Boolean",
      "desc": "Determines focus state, ONLY if 'manual-focus' is enabled / set to true"
    },

    "disable": {
      "extends": "disable"
    },

    "to": {
      "extends": "to"
    },

    "exact": {
      "extends": "exact"
    },

    "append": {
      "extends": "append"
    },

    "replace": {
      "extends": "replace"
    },

    "active-class": {
      "extends": "active-class"
    },

    "exact-active-class": {
      "extends": "exact-active-class"
    }
  },

  "slots": {
    "default": {
      "desc": "This is where QItem's content goes"
    }
  },

  "events": {
    "click": {
      "extends": "click",
      "desc": "Emitted if 'clickable' is set"
    },

    "keyup": {
      "desc": "Emitted (only if 'clickable' is set) when user focuses the component and hits a key",
      "params": {
        "evt": {
          "type": "Object",
          "desc": "JS event object"
        }
      }
    }
  }
}
