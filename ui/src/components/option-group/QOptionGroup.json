{
  "mixins": [ "mixins/size" ],

  "meta": {
    "docsUrl": "https://v1.quasar.dev/vue-components/option-group"
  },

  "behavior": {
    "$listeners": true
  },

  "props": {
    "value": {
      "extends": "value",
      "type": "Any",
      "examples": [ "v-model=\"group\"" ],
      "category": "model"
    },

    "options": {
      "type": "Array",
      "desc": "Array of objects with value and label props. The binary components will be created according to this array; Props from QToggle, QCheckbox or QRadio can also be added as key/value pairs to control the components singularly",
      "examples": [
        ":options=\"[ { label: 'Option 1', value: 'op1' }, { label: 'Option 2', value: 'op2' }, { label: 'Option 3', value: 'op3', disable: true } ]\""
      ],
      "category": "model"
    },

    "name": {
      "type": "String",
      "desc": "Used to specify the name of the controls; Useful if dealing with forms submitted directly to a URL",
      "examples": [ "car_id" ],
      "category": "behavior",
      "addedIn": "v1.9.0"
    },

    "type": {
      "type": "String",
      "desc": "The type of input component to be used",
      "values": [ "radio", "checkbox", "toggle" ],
      "default": "radio",
      "examples": [ "checkbox" ],
      "category": "content"
    },

    "color": {
      "extends": "color"
    },

    "keep-color": {
      "type": "Boolean",
      "desc": "Should the color (if specified any) be kept when input components are unticked?",
      "category": "behavior"
    },

    "size": {
      "addedIn": "v1.8.0"
    },

    "dark": {
      "extends": "dark"
    },

    "dense": {
      "extends": "dense"
    },

    "left-label":  {
      "type": "Boolean",
      "desc": "Label (if any specified) should be displayed on the left side of the input components",
      "category": "content"
    },

    "inline": {
      "type": "Boolean",
      "desc": "Show input components as inline-block rather than each having their own row",
      "category": "content"
    },

    "disable": {
      "extends": "disable"
    }
  },

  "events": {
    "input": {
      "extends": "input"
    }
  }
}
