{
  "props": {
    "value": {
      "extends": "value",
      "type": "String",
      "examples": [ "v-model=\"myColor\"" ]
    },

    "default-value": {
      "type": "String",
      "desc": "The default value to show when the model doesn't have one",
      "examples": [ "default-value=\"#c0c0c0\"" ],
      "category": "model"
    },

    "default-view": {
      "type": "String",
      "desc": "The default view of the picker",
      "default": "spectrum",
      "values": [ "spectrum", "tune", "palette" ],
      "category": "behavior"
    },

    "format-model": {
      "type": "String",
      "desc": "Forces a certain model format upon the model",
      "default": "auto",
      "values": [ "auto", "hex", "rgb", "hexa", "rgba" ],
      "examples": [ "hex" ],
      "category": "model"
    },

    "palette": {
      "type": "Array",
      "desc": "Use a custom palette of colors for the palette tab",
      "default": "(hard-coded palette)",
      "examples": [
        ":palette=\"[ '#019A9D', '#D9B801', 'rgb(23,120,0)', '#B2028A' ]\""
      ],
      "category": "content"
    },

    "no-header": {
      "type": "Boolean",
      "desc": "Do not render header",
      "category": "content"
    },

    "no-footer": {
      "type": "Boolean",
      "desc": "Do not render footer; Useful when you want a specific view ('default-view' prop) and don't want the user to be able to switch it",
      "category": "content"
    },

    "disable": {
      "extends": "disable"
    },

    "readonly": {
      "extends": "readonly"
    },

    "dark": {
      "extends": "dark"
    }
  },

  "events": {
    "input": {
      "extends": "input"
    },

    "change": {
      "extends": "input",
      "desc": "Emitted on lazy model value change (after user finishes selecting a color)"
    }
  },
  "css": {
    "generic-border-radius": {
      "desc": "QColorPicker's border radius",
      "extends": "generic-border-radius",
      "affects": [{
        "selector": ".q-color-picker",
        "property": "border-radius"
      }]
    },
    "shadow-2": {
      "desc": "QColorPicker's shadow",
      "type": "shadow",
      "affects": [{
        "selector": ".q-color-picker",
        "property": "box-shadow"
      }]
    },
    "grey-7": {
      "desc": "QColorPicker's slider track background color when the picker has alpha",
      "type": "color",
       "affects": [{
         "selector": ".q-color-picker__alpha .q-slider__track-container",
         "property": "background",
         "template": "linear-gradient(90deg, rgba(255, 255, 255, 0), $value)"
       }]
    },
    "grey-9": {
      "desc": "QColorPicker's slider text color",
      "type": "color",
      "affects": [{
        "selector": ".q-color-picker__slider .q-slider",
        "property": "color"
      }]
    },
    "grey-4": {
      "desc": "QColorPicker's input border color on the tune tab",
      "type": "color",
      "affects": [{
        "selector": ".q-color-picker__tune-tab input",
        "property": "border",
        "template": "1px solid $value"
      }]
    },
    "grey-5": {
      "desc": "QColorPicker's slider text color when the \"dark\" prop is true",
      "type": "color",
      "affects": [{
        "selector": ".q-color-picker--dark .q-slider",
        "property": "box-shadow"
      }]
    }
  }
}
