{
  "mixins": [ "composables/private/use-router-link" ],

  "meta": {
    "docsUrl": "https://v2.quasar.dev/vue-components/list-and-list-items"
  },

  "props": {
    "active": {
      "type": "Boolean",
      "desc": "Put item into 'active' state",
      "category": "state"
    },

    "dark": {
      "extends": "dark"
    },

    "clickable": {
      "type": "Boolean",
      "desc": "Is QItem clickable? If it's the case, then it will add hover effects and emit 'click' events",
      "category": "state"
    },

    "dense": {
      "extends": "dense"
    },

    "inset-level": {
      "type": "Number",
      "desc": "Apply an inset; Useful when avatar/left side is missing but you want to align content with other items that do have a left side, or when you're building a menu",
      "examples": [ ":inset-level=\"1\"" ],
      "category": "content"
    },

    "tabindex": {
      "extends": "tabindex"
    },

    "tag": {
      "extends": "tag",
      "desc": "HTML tag to render; Suggestion: use 'label' when encapsulating a QCheckbox/QRadio/QToggle so that when user clicks/taps on the whole item it will trigger a model change for the mentioned components",
      "default": "div",
      "examples": [ "a", "label", "div" ]
    },

    "manual-focus": {
      "type": "Boolean",
      "desc": "Put item into a manual focus state; Enables 'focused' prop which will determine if item is focused or not, rather than relying on native hover/focus states",
      "category": "state"
    },

    "focused": {
      "type": "Boolean",
      "desc": "Determines focus state, ONLY if 'manual-focus' is enabled / set to true",
      "category": "state"
    }
  },

  "slots": {
    "default": {
      "desc": "This is where QItem's content goes"
    }
  }
}
