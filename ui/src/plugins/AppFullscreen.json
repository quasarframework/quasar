{
  "meta": {
    "docsUrl": "https://v2.quasar.dev/quasar-plugins/app-fullscreen"
  },

  "injection": "$q.fullscreen",

  "props": {
    "isCapable": {
      "type": "Boolean",
      "desc": "Does browser support it?"
    },

    "isActive": {
      "type": "Boolean",
      "desc": "Is Fullscreen active?"
    },

    "activeEl": {
      "type": "Object",
      "desc": "The DOM element used as root for fullscreen, otherwise 'null'",
      "__exemption": [ "examples" ]
    }
  },

  "methods": {
    "request": {
      "desc": "Request going into Fullscreen (with optional target)",
      "params": {
        "target": {
          "type": "Element",
          "desc": "Optional Element of target to request Fullscreen on",
          "examples": [ "document.getElementById('example')" ]
        }
      },
      "returns": {
        "type": "Promise<any>",
        "desc": "A Promise with the outcome (true -> validation was a success, false -> invalid models detected)",
        "examples": [
          "request().then(response => { ... }).catch(err => { ... })"
        ]
      }
    },

    "exit": {
      "desc": "Request exiting out of Fullscreen mode",
      "returns": {
        "type": "Promise<any>",
        "desc": "A Promise with the outcome (true -> validation was a success, false -> invalid models detected)",
        "examples": [
          "exit().then(response => { ... }).catch(err => { ... })"
        ]
      }
    },

    "toggle": {
      "desc": "Request toggling Fullscreen mode (with optional target if requesting going into Fullscreen only)",
      "params": {
        "target": {
          "type": "Element",
          "desc": "Optional Element of target to request Fullscreen on",
          "examples": [ "document.getElementById('example')" ]
        }
      },
      "returns": {
        "type": "Promise<any>",
        "desc": "A Promise with the outcome (true -> validation was a success, false -> invalid models detected)",
        "examples": [
          "toggle().then(response => { ... }).catch(err => { ... })"
        ]
      }
    }
  }
}
